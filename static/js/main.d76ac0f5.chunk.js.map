{"version":3,"sources":["components/context/CounterContext.jsx","components/TotalModules/TotalModules.jsx","components/InProgressList/InProgressList.jsx","components/SubmittedList/SubmittedList.jsx","components/ReadyList/ReadyList.jsx","components/CompleteList/CompleteList.jsx","App.jsx","index.js"],"names":["CounterContext","createContext","CounterContextProvider","children","useState","contextValue","totalModules","setTotalModules","Provider","value","TotalModules","useContext","className","InProgressList","courses","addSelectedItem","openSidebar","selectedId","setSelectedId","lengthOfProgressModules","length","map","course","modules","filter","module","status","reduce","a","b","useEffect","prevCount","role","tabIndex","onKeyDown","onClick","title","classNames","active_module_progress","id","description","uuidv4","SubmittedList","lengthOfSubmittedModules","index","active_module_submitted","ReadyList","lengthOfReadyModules","active_module_ready","CompleteList","lengthOfCompletedModules","active_module_complete","App","setCourses","selectedItems","setSelectedItems","isSidebarOpen","setIsSidebarOpen","isModuleClicked","setModuleClicked","setSelectedItem","inputValue","setInputValue","coursesFromServer","toggle","clearAll","useCallback","closeSidebar","filteredCourses","toLocaleLowerCase","includes","type","placeholder","onChange","ev","target","sidebar__opened","sidebar__closed","item","active_module","author","moduleInfo","moduleText","event","i","removeSelectedItem","stopPropagation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d76ac0f5.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CounterContext = createContext(0);\n\nexport const CounterContextProvider = ({ children }) => {\n  const [totalModules, setTotalModules] = useState(0);\n\n  const contextValue = {\n    totalModules,\n    setTotalModules,\n  };\n\n  return (\n    <CounterContext.Provider value={contextValue}>\n      {children}\n    </CounterContext.Provider>\n  );\n};\n\nCounterContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { CounterContext } from '../context/CounterContext';\n\nimport './totalModules.scss';\n\nexport const TotalModules = () => {\n  const { totalModules } = useContext(CounterContext);\n\n  return (\n    <h2 className=\"totalModules\">\n      Total modules:\n      {` `}\n      <span className=\"totalModules__count\">\n        (\n        {totalModules}\n        )\n      </span>\n    </h2>\n  );\n};\n","import React, { useContext, useEffect } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CounterContext } from '../context/CounterContext';\n\nimport './inProgressList.scss';\n\nexport const InProgressList = ({\n  courses,\n  addSelectedItem,\n  openSidebar,\n  selectedId,\n  setSelectedId,\n}) => {\n  const { setTotalModules } = useContext(CounterContext);\n\n  const filteredByInProgress = modules => modules\n    .filter(module => (module.status === 'IN_PROGRESS'))\n    .map(module => module);\n\n  let lengthOfProgressModules = 0;\n\n  if (courses.length) {\n    lengthOfProgressModules = courses.map(course => course.modules\n      .filter(module => (module.status === 'IN_PROGRESS'))\n      .map(module => module).length).reduce((a, b) => a + b);\n  }\n\n  useEffect(() => {\n    setTotalModules(prevCount => prevCount + lengthOfProgressModules);\n  }, [lengthOfProgressModules]);\n\n  return (\n    <div className=\"in-progress\">\n      <h2\n        className=\"in-progress__main-title\"\n      >\n        In Progress\n        (\n        {lengthOfProgressModules}\n        )\n      </h2>\n      <ul className=\"in-progress__list\">\n        {[...courses].map(course => (\n          <div\n            key={uuidv4()}\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={() => null}\n            onClick={() => (\n              openSidebar()\n            )}\n          >\n            <li\n              className=\"in-progress__item\"\n            >\n              <h3\n                className=\"in-progress__title\"\n              >\n                {course.title}\n              </h3>\n              {filteredByInProgress(course.modules)\n                .map(module => (\n                  <div\n                    key={uuidv4()}\n                    className={classNames('in-progress__item-text', {\n                      active_module_progress: selectedId === module.id,\n                    })\n                    }\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => null}\n                    onClick={() => {\n                      addSelectedItem(module);\n                      setSelectedId(module.id);\n                    }}\n                  >\n                    <p>\n                      {module.description}\n                    </p>\n                  </div>\n                ))}\n            </li>\n          </div>\n        ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nInProgressList.propTypes = {\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      modules: PropTypes.arrayOf(\n        PropTypes.shape({\n          description: PropTypes.string,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n\n  selectedId: PropTypes.number.isRequired,\n\n  addSelectedItem: PropTypes.func.isRequired,\n  openSidebar: PropTypes.func.isRequired,\n  setSelectedId: PropTypes.func.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CounterContext } from '../context/CounterContext';\n\nimport './submittedList.scss';\n\nexport const SubmittedList = ({\n  courses,\n  addSelectedItem,\n  openSidebar,\n  selectedId,\n  setSelectedId,\n}) => {\n  const { setTotalModules } = useContext(CounterContext);\n\n  const filteredBySubmitted = modules => modules\n    .filter(module => (module.status === 'SUBMITTED'))\n    .map(module => module);\n\n  let lengthOfSubmittedModules = 0;\n\n  if (courses.length) {\n    lengthOfSubmittedModules = courses.map(course => course.modules\n      .filter(module => (module.status === 'SUBMITTED'))\n      .map(module => module).length).reduce((a, b) => a + b);\n  }\n\n  useEffect(() => {\n    setTotalModules(prevCount => prevCount + lengthOfSubmittedModules);\n  }, [lengthOfSubmittedModules]);\n\n  return (\n    <div className=\"submitted\">\n      <h2\n        className=\"submitted__main-title\"\n      >\n        Submitted\n        (\n        {lengthOfSubmittedModules}\n        )\n      </h2>\n      <ul className=\"submitted__list\">\n        {[...courses].map(course => (\n          <div\n            key={uuidv4()}\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={() => null}\n            onClick={() => (\n              openSidebar()\n            )}\n          >\n            <li\n              className=\"submitted__item\"\n            >\n              <h3 className=\"submitted__title\">\n                {course.title}\n              </h3>\n              {filteredBySubmitted(course.modules)\n                .map((module, index) => (\n                  <div\n                    key={uuidv4()}\n                    className={classNames('submitted__item-text', {\n                      active_module_submitted: selectedId === module.id,\n                    })\n                    }\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => null}\n                    onClick={() => {\n                      addSelectedItem(module);\n                      setSelectedId(module.id);\n                    }}\n                  >\n                    <p>\n                      {module.description}\n                    </p>\n                  </div>\n                ))}\n            </li>\n          </div>\n        ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nSubmittedList.propTypes = {\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      modules: PropTypes.arrayOf(\n        PropTypes.shape({\n          description: PropTypes.string,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n\n  selectedId: PropTypes.number.isRequired,\n\n  addSelectedItem: PropTypes.func.isRequired,\n  openSidebar: PropTypes.func.isRequired,\n  setSelectedId: PropTypes.func.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CounterContext } from '../context/CounterContext';\n\nimport './readyList.scss';\n\nexport const ReadyList = ({\n  courses,\n  addSelectedItem,\n  openSidebar,\n  selectedId,\n  setSelectedId,\n}) => {\n  const { setTotalModules } = useContext(CounterContext);\n\n  const filteredByReady = modules => modules\n    .filter(module => (module.status === 'READY'))\n    .map(module => module);\n\n  let lengthOfReadyModules = 0;\n\n  if (courses.length) {\n    lengthOfReadyModules = courses.map(course => course.modules\n      .filter(module => (module.status === 'READY'))\n      .map(module => module).length).reduce((a, b) => a + b);\n  }\n\n  useEffect(() => {\n    setTotalModules(prevCount => prevCount + lengthOfReadyModules);\n  }, [lengthOfReadyModules]);\n\n  return (\n    <div className=\"ready\">\n      <h2\n        className=\"ready__main-title\"\n      >\n        Ready to submit\n        (\n        {lengthOfReadyModules}\n        )\n      </h2>\n      <ul className=\"ready__list\">\n        {[...courses].map(course => (\n          <div\n            key={uuidv4()}\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={() => null}\n            onClick={() => (\n              openSidebar()\n            )}\n          >\n            <li\n              className=\"ready__item\"\n            >\n              <h3 className=\"ready__title\">\n                {course.title}\n              </h3>\n              {filteredByReady(course.modules)\n                .map(module => (\n                  <div\n                    key={uuidv4()}\n                    className={classNames('ready__item-text', {\n                      active_module_ready: selectedId === module.id,\n                    })\n                    }\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => null}\n                    onClick={() => {\n                      addSelectedItem(module);\n                      setSelectedId(module.id);\n                    }}\n                  >\n                    <p>\n                      {module.description}\n                    </p>\n                  </div>\n                ))}\n            </li>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nReadyList.propTypes = {\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      modules: PropTypes.arrayOf(\n        PropTypes.shape({\n          description: PropTypes.string,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n\n  selectedId: PropTypes.number.isRequired,\n\n  addSelectedItem: PropTypes.func.isRequired,\n  openSidebar: PropTypes.func.isRequired,\n  setSelectedId: PropTypes.func.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\nimport { CounterContext } from '../context/CounterContext';\n\nimport './completeList.scss';\n\nexport const CompleteList = ({\n  courses,\n  addSelectedItem,\n  openSidebar,\n  selectedId,\n  setSelectedId,\n}) => {\n  const { setTotalModules } = useContext(CounterContext);\n\n  const filteredByComplete = modules => modules\n    .filter(module => (module.status === 'COMPLETE'))\n    .map(module => module);\n\n  let lengthOfCompletedModules = 0;\n\n  if (courses.length) {\n    lengthOfCompletedModules = courses.map(course => course.modules\n      .filter(module => (module.status === 'COMPLETE'))\n      .map(module => module).length).reduce((a, b) => a + b);\n  }\n\n  useEffect(() => {\n    setTotalModules(prevCount => prevCount + lengthOfCompletedModules);\n  }, [lengthOfCompletedModules]);\n\n  return (\n    <div className=\"complete\">\n      <h2\n        className=\"complete__main-title\"\n      >\n        Completed\n        (\n        {lengthOfCompletedModules}\n        )\n      </h2>\n      <ul className=\"complete__list\">\n        {[...courses].map(course => (\n          <div\n            key={uuidv4()}\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={() => null}\n            onClick={() => (\n              openSidebar()\n            )}\n          >\n            <li\n              className=\"complete__item\"\n            >\n              <h3 className=\"complete__title\">\n                {course.title}\n              </h3>\n              {filteredByComplete(course.modules)\n                .map(module => (\n                  <div\n                    key={uuidv4()}\n                    className={classNames('complete__item-text', {\n                      active_module_complete: selectedId === module.id,\n                    })\n                    }\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => null}\n                    onClick={() => {\n                      addSelectedItem(module);\n                      setSelectedId(module.id);\n                    }}\n                  >\n                    <p>\n                      {module.description}\n                    </p>\n                  </div>\n                ))}\n            </li>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCompleteList.propTypes = {\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      modules: PropTypes.arrayOf(\n        PropTypes.shape({\n          description: PropTypes.string,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n\n  selectedId: PropTypes.number.isRequired,\n\n  addSelectedItem: PropTypes.func.isRequired,\n  openSidebar: PropTypes.func.isRequired,\n  setSelectedId: PropTypes.func.isRequired,\n};\n","/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\nimport React, {\n  useCallback,\n  useState,\n  useEffect,\n} from 'react';\nimport classNames from 'classnames';\nimport {\n  IoIosArrowDown,\n  IoIosArrowUp,\n  IoIosArrowRoundBack,\n} from 'react-icons/io';\nimport { FcSearch } from 'react-icons/fc';\nimport { FaReact } from 'react-icons/fa';\nimport { v4 as uuidv4 } from 'uuid';\nimport coursesFromServer from './api/courses.json';\nimport { TotalModules } from './components/TotalModules';\nimport { InProgressList } from './components/InProgressList';\nimport { SubmittedList } from './components/SubmittedList';\nimport { ReadyList } from './components/ReadyList';\nimport { CompleteList } from './components/CompleteList';\nimport {\n  CounterContextProvider,\n} from './components/context/CounterContext';\n\nimport './app.scss';\n\nexport const App = () => {\n  const [courses, setCourses] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isModuleClicked, setModuleClicked] = useState(false);\n  // eslint-disable-next-line no-unused-vars\n  const [selectedItem, setSelectedItem] = useState({});\n  const [inputValue, setInputValue] = useState('');\n  const [selectedId, setSelectedId] = useState(0);\n\n  useEffect(() => {\n    setCourses([...coursesFromServer]);\n  }, []);\n\n  function handleChange(ev) {\n    const { value } = ev.target;\n\n    setInputValue(value);\n  }\n\n  const inputFilter = course => (\n    course.title === null\n      ? course.title\n      : (course.title.toLocaleLowerCase())\n        .includes(inputValue.toLocaleLowerCase())\n  );\n\n  const removeSelectedItem = (index) => {\n    setSelectedItems(selectedItems.filter((item, i) => i !== index));\n  };\n\n  const toggle = (index) => {\n    if (isModuleClicked === index) {\n      return setModuleClicked(null);\n    }\n\n    return setModuleClicked(index);\n  };\n\n  const addSelectedItem = (value) => {\n    setSelectedItem(value);\n    setSelectedItems([...selectedItems, value]);\n  };\n\n  const clearAll = useCallback(() => {\n    setSelectedItems([]);\n  }, []);\n\n  const openSidebar = useCallback(() => {\n    setIsSidebarOpen(true);\n  }, []);\n\n  const closeSidebar = useCallback(() => {\n    setIsSidebarOpen(false);\n  }, []);\n\n  const filteredCourses = courses\n    .filter(inputFilter);\n\n  return (\n    <CounterContextProvider>\n      <div className=\"app\">\n        <div className=\"app__search-field-box\">\n          <input\n            className=\"app__search-field\"\n            type=\"text\"\n            placeholder=\"Enter some text\"\n            value={inputValue}\n            onChange={handleChange}\n          />\n          <div\n            className=\"app__search-field-icon\"\n          >\n            <FcSearch />\n          </div>\n        </div>\n        <div className=\"app__logo-box\">\n          <FaReact\n            className=\"app__logo\"\n          />\n        </div>\n        <TotalModules />\n        <InProgressList\n          openSidebar={openSidebar}\n          courses={[...filteredCourses]}\n          addSelectedItem={addSelectedItem}\n          isModuleClicked={isModuleClicked}\n          toggle={toggle}\n          selectedId={selectedId}\n          setSelectedId={setSelectedId}\n        />\n        <SubmittedList\n          openSidebar={openSidebar}\n          courses={[...filteredCourses]}\n          addSelectedItem={addSelectedItem}\n          isModuleClicked={isModuleClicked}\n          toggle={toggle}\n          selectedId={selectedId}\n          setSelectedId={setSelectedId}\n        />\n        <ReadyList\n          openSidebar={openSidebar}\n          courses={[...filteredCourses]}\n          addSelectedItem={addSelectedItem}\n          isModuleClicked={isModuleClicked}\n          toggle={toggle}\n          selectedId={selectedId}\n          setSelectedId={setSelectedId}\n        />\n        <CompleteList\n          openSidebar={openSidebar}\n          courses={[...filteredCourses]}\n          addSelectedItem={addSelectedItem}\n          isModuleClicked={isModuleClicked}\n          toggle={toggle}\n          selectedId={selectedId}\n          setSelectedId={setSelectedId}\n        />\n        <div className=\"app__open-sidebar-box\">\n          <IoIosArrowRoundBack\n            className=\"app__open-sidebar-button\"\n            onClick={() => {\n              openSidebar();\n            }}\n            type=\"button\"\n          />\n        </div>\n        <div className={classNames('sidebar', {\n          sidebar__opened: isSidebarOpen,\n          sidebar__closed: !isSidebarOpen,\n        })}\n        >\n          <h2 className=\"sidebar__title\">\n            Courses\n          </h2>\n          <ul className=\"sidebar__list\">\n            {selectedItems.map((item, index) => (\n              <li\n                key={uuidv4()}\n                className={classNames('sidebar__item', {\n                  active_module: selectedId === item.id,\n                })}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={() => null}\n                onClick={() => {\n                  toggle(index);\n                  setSelectedId(item.id);\n                }}\n              >\n                <div>\n                  <h3 className=\"sidebar__selected-title\">\n                    {`${item.author} course`}\n                  </h3>\n                  <p className=\"sidebar__selected-description\">\n                    {item.description}\n                  </p>\n                </div>\n                {isModuleClicked === index ? (\n                  <>\n                    <p\n                      className=\"sidebar__selected-info\"\n                    >\n                      {item.moduleInfo}\n                    </p>\n                    <p\n                      className=\"sidebar__selected-info\"\n                    >\n                      {item.moduleText}\n                    </p>\n                  </>\n                ) : null}\n                <div\n                  className=\"sidebar__selected-icon\"\n                >\n                  {isModuleClicked === index\n                    ? <IoIosArrowUp />\n                    : <IoIosArrowDown />}\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"sidebar__button-remove\"\n                  onClick={(event) => {\n                    removeSelectedItem(index);\n                    event.stopPropagation();\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n          <div className=\"sidebar__button-close-box\">\n            <IoIosArrowRoundBack\n              className=\"sidebar__button-close\"\n              onClick={() => {\n                closeSidebar();\n              }}\n              type=\"button\"\n            />\n          </div>\n          <button\n            className=\"sidebar__button-clear\"\n            onClick={() => {\n              clearAll();\n            }}\n            type=\"button\"\n          >\n            Clear All\n          </button>\n        </div>\n      </div>\n    </CounterContextProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}